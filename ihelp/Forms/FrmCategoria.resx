<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>